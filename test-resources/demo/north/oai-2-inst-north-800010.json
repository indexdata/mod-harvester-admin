{
  "acl": "north",
  "description": "NORTH: OAI20-MARC21 XML to FOLIO Instance XML",
  "inputFormat": "XML",
  "name": "NORTH: OAI20-MARC21 to Instance XML",
  "outputFormat": "XML",
  "script": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet\n    version=\"1.0\"\n    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n    xmlns:marc=\"http://www.loc.gov/MARC21/slim\"\n    xmlns:oai20=\"http://www.openarchives.org/OAI/2.0/\">\n\n    <xsl:import href=\"map-relator-to-contributor-type.xsl\"/>\n    \n    <xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\" encoding=\"UTF-8\"/>\n    <xsl:template match=\"/\">\n        <collection>\n            <xsl:apply-templates />\n        </collection>\n    </xsl:template>\n\n    <xsl:template match=\"oai20:record\">\n      <record>\n        <xsl:choose>\n          <xsl:when test=\"oai20:header[@status='deleted']\">\n             <xsl:apply-templates/>\n          </xsl:when>\n          <xsl:otherwise>  \n            <!-- Store the original MARC record to be used by subsequent style sheets -->\n            <original>\n              <record xmlns=\"http://www.openarchives.org/OAI/2.0/\" \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n                    xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd\">\n                <xsl:for-each select=\"@* | node()\">\n                    <xsl:copy-of select=\".\"/>\n                </xsl:for-each>\n              </record>            \n            </original>\n            <xsl:apply-templates/>\n          </xsl:otherwise>\n        </xsl:choose>\n      </record>\n    </xsl:template>\n\n\n    <!-- If this is an OAI-PMH deletion record -->\n    <xsl:template match=\"//oai20:header[@status='deleted']\">\n        <delete>\n            <oaiIdentifier><xsl:value-of select=\"oai20:identifier\"/></oaiIdentifier>\n            <identifierTypeIdHere/>\n            <institutionIdHere/>\n        </delete>\n    </xsl:template>\n\n    <!-- MARC meta data -->\n    <xsl:template match=\"//marc:record\">\n\n        <!-- Information needed for storing source record in union catalog context -->\n        <institutionIdHere/>\n        <localIdentifier><xsl:value-of select=\"marc:controlfield[@tag='001']\" /></localIdentifier>\n        <identifierTypeIdHere/>\n\n        <!-- Bibliographic record for FOLIO inventory -->\n        <instance>\n            <source>MARC</source>\n\n            <!-- Instance type ID (resource type) -->\n            <instanceTypeId>\n                <!-- UUIDs for resource types -->\n                <xsl:choose>\n                <xsl:when test=\"substring(marc:leader,7,1)='a'\">6312d172-f0cf-40f6-b27d-9fa8feaf332f</xsl:when> <!-- language material : text -->\n                <xsl:when test=\"substring(marc:leader,7,1)='c'\">497b5090-3da2-486c-b57f-de5bb3c2e26d</xsl:when> <!-- notated music : notated music -->\n                <xsl:when test=\"substring(marc:leader,7,1)='d'\">497b5090-3da2-486c-b57f-de5bb3c2e26d</xsl:when> <!-- manuscript notated music : notated music -> notated music -->\n                <xsl:when test=\"substring(marc:leader,7,1)='e'\">526aa04d-9289-4511-8866-349299592c18</xsl:when> <!-- cartographic material : cartographic image -->\n                <xsl:when test=\"substring(marc:leader,7,1)='f'\">a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:when> <!-- other --> <!-- manuscript cartographic material : ? -->\n                <xsl:when test=\"substring(marc:leader,7,1)='g'\">535e3160-763a-42f9-b0c0-d8ed7df6e2a2</xsl:when> <!-- projected image : still image -->\n                <xsl:when test=\"substring(marc:leader,7,1)='i'\">9bce18bd-45bf-4949-8fa8-63163e4b7d7f</xsl:when> <!-- nonmusical sound recording : sounds -->\n                <xsl:when test=\"substring(marc:leader,7,1)='j'\">3be24c14-3551-4180-9292-26a786649c8b</xsl:when> <!-- musical sound recording : performed music -->\n                <xsl:when test=\"substring(marc:leader,7,1)='k'\">a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:when> <!-- other --> <!-- two-dimensional nonprojectable graphic : ?-->\n                <xsl:when test=\"substring(marc:leader,7,1)='m'\">df5dddff-9c30-4507-8b82-119ff972d4d7</xsl:when> <!-- computer file : computer dataset -->\n                <xsl:when test=\"substring(marc:leader,7,1)='o'\">a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:when> <!-- kit : other -->\n                <xsl:when test=\"substring(marc:leader,7,1)='p'\">a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:when> <!-- mixed material : other -->\n                <xsl:when test=\"substring(marc:leader,7,1)='r'\">c1e95c2b-4efc-48cf-9e71-edb622cf0c22</xsl:when> <!-- three-dimensional artifact or naturally occurring object : three-dimensional form -->\n                <xsl:when test=\"substring(marc:leader,7,1)='t'\">6312d172-f0cf-40f6-b27d-9fa8feaf332f</xsl:when> <!-- manuscript language material : text -->\n                <xsl:otherwise>a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:otherwise>                             <!--  : other -->\n                </xsl:choose>\n            </instanceTypeId>\n\n            <!-- Identifiers -->\n            <xsl:if test=\"marc:datafield[@tag='010' or @tag='020' or @tag='022' or @tag='024' or @tag='028' or @tag='035' or @tag='074']\n                        or marc:controlfield[@tag='001']\">\n                <identifiers>\n                <arr>\n                <xsl:for-each select=\"marc:controlfield[@tag='001']\">\n                    <i>\n                    <value><xsl:value-of select=\".\"/></value>\n                    <!-- A subsequent library specific transformation (style sheet)\n                        must replace this tag with the actual identifierTypeId for\n                        the record identifer type of the given library -->\n                    <identifierTypeIdHere/>\n                    </i>\n                </xsl:for-each>\n                <xsl:for-each select=\"marc:datafield[(@tag='001' or @tag='010' or @tag='020' or @tag='022' or @tag='024' or @tag='028' or @tag='035' or @tag='074') and normalize-space(./marc:subfield[@code='a'])]\">\n                    <i>\n                    <xsl:choose>\n                        <xsl:when test=\"current()[@tag='010'] and marc:subfield[@code='a']\">\n                        <value>\n                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\n                        </value>\n                        <identifierTypeId>c858e4f2-2b6b-4385-842b-60732ee14abb</identifierTypeId> <!-- LCCN -->\n                        </xsl:when>\n                        <xsl:when test=\"current()[@tag='020'] and marc:subfield[@code='a']\">\n                        <value>\n                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\n                        </value>\n                        <identifierTypeId>8261054f-be78-422d-bd51-4ed9f33c3422</identifierTypeId> <!-- ISBN -->\n                        </xsl:when>\n                        <xsl:when test=\"current()[@tag='022'] and marc:subfield[@code='a']\">\n                        <value>\n                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\n                        </value>\n                        <identifierTypeId>913300b2-03ed-469a-8179-c1092c991227</identifierTypeId> <!-- ISSN -->\n                        </xsl:when>\n                        <xsl:when test=\"current()[@tag='024'] and marc:subfield[@code='a']\">\n                        <value>\n                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\n                        </value>\n                        <identifierTypeId>2e8b3b6c-0e7d-4e48-bca2-b0b23b376af5</identifierTypeId> <!-- Other standard identifier -->\n                        </xsl:when>\n                        <xsl:when test=\"current()[@tag='028'] and marc:subfield[@code='a']\">\n                        <value>\n                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\n                        </value>\n                        <identifierTypeId>b5d8cdc4-9441-487c-90cf-0c7ec97728eb</identifierTypeId> <!-- Publisher number -->\n                        </xsl:when>\n                        <xsl:when test=\"current()[@tag='035'] and marc:subfield[@code='a']\">\n                        <value>\n                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\n                        </value>\n                        <identifierTypeId>7e591197-f335-4afb-bc6d-a6d76ca3bace</identifierTypeId> <!-- System control number -->\n                        </xsl:when>\n                        <xsl:when test=\"current()[@tag='074'] and marc:subfield[@code='a']\">\n                        <value>\n                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\n                        </value>\n                        <identifierTypeId>351ebc1c-3aae-4825-8765-c6d50dbf011f</identifierTypeId> <!-- GPO item number -->\n                        </xsl:when>\n                    </xsl:choose>\n                    </i>\n                </xsl:for-each>\n                </arr>\n                </identifiers>\n            </xsl:if>\n\n            <!-- Classifications -->\n            <xsl:if test=\"marc:datafield[@tag='050' or @tag='060' or @tag='080' or @tag='082' or @tag='086' or @tag='090']\">\n                <classifications>\n                <arr>\n                    <xsl:for-each select=\"marc:datafield[@tag='050' or @tag='060' or @tag='080' or @tag='082' or @tag='086' or @tag='090']\">\n                    <i>\n                        <xsl:choose>\n                        <xsl:when test=\"current()[@tag='050']\">\n                            <classificationNumber>\n                            <xsl:for-each select=\"marc:subfield[@code='a' or @code='b']\">\n                                <xsl:if test=\"position() > 1\">\n                                <xsl:text>; </xsl:text>\n                            </xsl:if>\n                            <xsl:value-of select=\".\"/>\n                            </xsl:for-each>\n                            </classificationNumber>\n                            <classificationTypeId>ce176ace-a53e-4b4d-aa89-725ed7b2edac</classificationTypeId> <!-- LC, Library of Congress -->\n                        </xsl:when>\n                        <xsl:when test=\"current()[@tag='082']\">\n                            <classificationNumber>\n                            <xsl:for-each select=\"marc:subfield[@code='a' or @code='b']\">\n                                <xsl:if test=\"position() > 1\">\n                                <xsl:text>; </xsl:text>\n                            </xsl:if>\n                            <xsl:value-of select=\".\"/>\n                            </xsl:for-each>\n                            </classificationNumber>\n                            <classificationTypeId>42471af9-7d25-4f3a-bf78-60d29dcf463b</classificationTypeId> <!-- Dewey -->\n                        </xsl:when>\n                        <xsl:when test=\"current()[@tag='086']\">\n                            <classificationNumber>\n                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\n                            </classificationNumber>\n                            <classificationTypeId>9075b5f8-7d97-49e1-a431-73fdd468d476</classificationTypeId> <!-- SUDOC -->\n                        </xsl:when>\n                        </xsl:choose>\n                    </i>\n                    </xsl:for-each>\n                </arr>\n                </classifications>\n            </xsl:if>\n\n            <!-- title --> \n            <title>\n                <xsl:variable name=\"dirty-title\">\n                    <xsl:for-each select=\"marc:datafield[@tag='245'][1]/marc:subfield[@code='a' or @code='b' or @code='h' or @code='n' or @code='p']\">\n                        <xsl:value-of select=\".\"/>\n                        <xsl:if test=\"position() != last()\">\n                            <xsl:text> </xsl:text>\n                        </xsl:if>\n                    </xsl:for-each>\n                </xsl:variable>\n                <xsl:call-template name=\"remove-characters-last\">\n                    <xsl:with-param  name=\"input\" select=\"$dirty-title\" />\n                    <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\n                </xsl:call-template>\n            </title>\n\n            <!-- Contributors -->\n            <xsl:if test=\"marc:datafield[@tag='100' or @tag='110' or @tag='111' or @tag='700' or @tag='710' or @tag='711']\">\n                <contributors>\n                <arr>\n                    <xsl:for-each select=\"marc:datafield[@tag='100' or @tag='110' or @tag='111' or @tag='700' or @tag='710' or @tag='711']\">\n                    <i>\n                        <name>\n                        <xsl:for-each select=\"marc:subfield[@code='a' or @code='b' or @code='c' or @code='d' or @code='f' or @code='g' or @code='j' or @code='k' or @code='l' or @code='n' or @code='p' or @code='q' or @code='t' or @code='u']\">\n                        <xsl:if test=\"position() > 1\">\n                            <xsl:text>, </xsl:text>\n                        </xsl:if>\n                        <xsl:call-template name=\"remove-characters-last\">\n                            <xsl:with-param  name=\"input\" select=\".\" />\n                            <xsl:with-param  name=\"characters\">,-.</xsl:with-param>\n                        </xsl:call-template>\n                        </xsl:for-each>\n                        </name>\n                        <xsl:choose>\n                        <xsl:when test=\"@tag='100' or @tag='700'\">\n                            <contributorNameTypeId>2b94c631-fca9-4892-a730-03ee529ffe2a</contributorNameTypeId> <!-- personal name -->\n                            <xsl:if test=\"@tag='100'\">\n                            <primary>true</primary>\n                            </xsl:if>\n                        </xsl:when>\n                        <xsl:when test=\"@tag='110' or @tag='710'\">\n                            <contributorNameTypeId>2e48e713-17f3-4c13-a9f8-23845bb210aa</contributorNameTypeId> <!-- corporate name -->\n                        </xsl:when>\n                        <xsl:when test=\"@tag='111' or @tage='711'\">\n                            <contributorNameTypeId>e8b311a6-3b21-43f2-a269-dd9310cb2d0a</contributorNameTypeId> <!-- meeting name -->\n                        </xsl:when>\n                        <xsl:otherwise>\n                            <contributorNameTypeId>2b94c631-fca9-4892-a730-03ee529ffe2a</contributorNameTypeId> <!-- personal name -->\n                        </xsl:otherwise>\n                        </xsl:choose>\n                        <xsl:if test=\"marc:subfield[@code='e' or @code='4']\">\n                        <contributorTypeId>\n                            <xsl:call-template name=\"map-relator\"/>\n                        </contributorTypeId>\n                        </xsl:if>\n                    </i>\n                    </xsl:for-each>\n                </arr>\n                </contributors>\n            </xsl:if>\n\n            <!-- Editions -->\n            <xsl:if test=\"marc:datafield[@tag='250']\">\n                <editions>\n                <arr>\n                <xsl:for-each select=\"marc:datafield[@tag='250']\">\n                    <i>\n                    <xsl:value-of select=\"marc:subfield[@code='a']\"/>\n                    <xsl:if test=\"marc:subfield[@code='b']\">; <xsl:value-of select=\"marc:subfield[@code='b']\"/></xsl:if>\n                    </i>\n                </xsl:for-each>\n                </arr>\n                </editions>\n            </xsl:if>\n\n            <!-- Publication -->\n            <xsl:choose>\n                <xsl:when test=\"marc:datafield[@tag='260' or @tag='264']\">\n                <publication>\n                    <arr>\n                    <xsl:for-each select=\"marc:datafield[@tag='260' or @tag='264']\">\n                        <i>\n                        <publisher>\n                            <xsl:value-of select=\"marc:subfield[@code='b']\"/>\n                        </publisher>\n                        <place>\n                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\n                        </place>\n                        <dateOfPublication>\n                            <xsl:value-of select=\"marc:subfield[@code='c']\"/>\n                        </dateOfPublication>\n                        </i>\n                    </xsl:for-each>\n                    </arr>\n                </publication>\n                </xsl:when>\n                <xsl:otherwise>\n                <publication>\n                    <arr>\n                    <i>\n                        <dateOfPublication>\n                        <xsl:value-of select=\"substring(marc:controlfield[@tag='008'],8,4)\"/>\n                        </dateOfPublication>\n                    </i>\n                    </arr>\n                </publication>\n                </xsl:otherwise>\n            </xsl:choose>\n\n            <!-- physicalDescriptions -->\n            <xsl:if test=\"marc:datafield[@tag='300']\">\n                <physicalDescriptions>\n                <arr>\n                    <xsl:for-each select=\"marc:datafield[@tag='300']\">\n                    <i>\n                        <xsl:call-template name=\"remove-characters-last\">\n                        <xsl:with-param  name=\"input\" select=\"marc:subfield[@code='a']\" />\n                        <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\n                        </xsl:call-template>\n                    </i>\n                    </xsl:for-each>\n                </arr>\n                </physicalDescriptions>\n            </xsl:if>\n\n            <!-- Subjects -->\n            <xsl:if test=\"marc:datafield[@tag='600' or @tag='610' or @tag='611' or @tag='630' or @tag='648' or @tag='650' or @tag='651' or @tag='653' or @tag='654' or @tag='655' or @tag='656' or @tag='657' or @tag='658' or @tag='662' or @tag='69X']\">\n                <subjects>\n                <arr>\n                <xsl:for-each select=\"marc:datafield[@tag='600' or @tag='610' or @tag='611' or @tag='630' or @tag='648' or @tag='650' or @tag='651' or @tag='653' or @tag='654' or @tag='655' or @tag='656' or @tag='657' or @tag='658' or @tag='662' or @tag='69X']\">\n                    <i>\n                    <xsl:for-each select=\"marc:subfield[@code='a' or @code='b' or @code='c' or @code='d' or @code='f' or @code='g' or @code='j' or @code='k' or @code='l' or @code='n' or @code='p' or @code='q' or @code='t' or @code='u' or @code='v' or @code='x' or @code='y' or @code='z']\">\n                    <xsl:if test=\"position() > 1\">\n                        <xsl:text>--</xsl:text>\n                    </xsl:if>\n                    <xsl:call-template name=\"remove-characters-last\">\n                        <xsl:with-param  name=\"input\" select=\".\" />\n                        <xsl:with-param  name=\"characters\">,-.</xsl:with-param>\n                        </xsl:call-template>\n                    </xsl:for-each>\n                    </i>\n                </xsl:for-each>\n                </arr>\n                </subjects>\n            </xsl:if>\n\n            <!-- Notes -->\n            <xsl:if test=\"marc:datafield[@tag='500' or @tag='504' or @tag='505' or @tag='520']\">\n                <notes>\n                    <arr>\n                    <xsl:for-each select=\"marc:datafield[@tag='500' or @tag='504' or @tag='505' or @tag='520']\">\n                        <i>\n                            <note>\n                                <xsl:value-of select=\"normalize-space(.)\"/>\n                            </note>\n                            <instanceNoteTypeId>\n                                <xsl:choose>\n                                    <xsl:when test='./@tag=\"504\"'>86b6e817-e1bc-42fb-bab0-70e7547de6c1</xsl:when> <!-- biliography -->\n                                    <xsl:when test='./@tag=\"505\"'>5ba8e385-0e27-462e-a571-ffa1fa34ea54</xsl:when> <!-- contents -->\n                                    <xsl:when test='./@tag=\"520\"'>0e2e11b-450f-45c8-b09b-0f819999966e</xsl:when> <!-- contents -->\n                                    <xsl:otherwise>6a2533a7-4de2-4e64-8466-074c2fa9308c</xsl:otherwise> <!-- general -->\n                            </xsl:choose>\n                            </instanceNoteTypeId>\n                        </i>\n                    </xsl:for-each>\n                    </arr>\n                </notes>\n            </xsl:if>\n            \n        </instance>\n\n        <!-- Additional info for creating match key in FOLIO Inventory match module -->\n        <matchKey>\n            <xsl:for-each select=\"marc:datafield[@tag='245']\">\n            <title>\n                <xsl:call-template name=\"remove-characters-last\">\n                <xsl:with-param  name=\"input\" select=\"marc:subfield[@code='a']\" />\n                <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\n                </xsl:call-template>\n            </title>\n            <remainder-of-title>\n            <xsl:text> : </xsl:text>\n                <xsl:call-template name=\"remove-characters-last\">\n                <xsl:with-param  name=\"input\" select=\"marc:subfield[@code='b']\" />\n                <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\n                </xsl:call-template>\n            </remainder-of-title>\n            <medium>\n                <xsl:call-template name=\"remove-characters-last\">\n                <xsl:with-param  name=\"input\" select=\"marc:subfield[@code='h']\" />\n                <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\n                </xsl:call-template>\n            </medium>\n            <name-of-part-section-of-work>\n                <xsl:value-of select=\"marc:subfield[@code='p']\" />\n            </name-of-part-section-of-work>\n            <number-of-part-section-of-work>\n                <xsl:value-of select=\"marc:subfield[@code='n']\" />\n            </number-of-part-section-of-work>\n            <inclusive-dates>\n                <xsl:value-of select=\"marc:subfield[@code='f']\" />\n            </inclusive-dates>\n            </xsl:for-each>\n        </matchKey>\n    </xsl:template>\n\n    <xsl:template match=\"text()\"/>\n\n    <xsl:template name=\"remove-characters-last\">\n        <xsl:param name=\"input\" />\n        <xsl:param name=\"characters\"/>\n        <xsl:variable name=\"lastcharacter\" select=\"substring($input,string-length($input))\" />\n        <xsl:choose>\n            <xsl:when test=\"$characters and $lastcharacter and contains($characters, $lastcharacter)\">\n            <xsl:call-template name=\"remove-characters-last\">\n                <xsl:with-param  name=\"input\" select=\"substring($input,1, string-length($input)-1)\" />\n                <xsl:with-param  name=\"characters\" select=\"$characters\" />\n            </xsl:call-template>\n            </xsl:when>\n            <xsl:otherwise>\n            <xsl:value-of select=\"$input\"/>\n            </xsl:otherwise>\n        </xsl:choose>\n    </xsl:template>\n\n</xsl:stylesheet>\n",
  "id": "800010",
  "testData": "",
  "testOutput": "",
  "type": "XmlTransformStep"
}