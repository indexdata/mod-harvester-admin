{
  "description": "NORTH: OAI20-MARC21 XML to FOLIO Instance XML",
  "inputFormat": "XML",
  "name": "NORTH: OAI20-MARC21 to Instance XML",
  "outputFormat": "XML",
  "script": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r<xsl:stylesheet\r    version=\"1.0\"\r    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\r    xmlns:marc=\"http://www.loc.gov/MARC21/slim\"\r    xmlns:oai20=\"http://www.openarchives.org/OAI/2.0/\">\r\r    <xsl:import href=\"map-relator-to-contributor-type.xsl\"/>\r    \r    <xsl:output indent=\"yes\" method=\"xml\" version=\"1.0\" encoding=\"UTF-8\"/>\r    <xsl:template match=\"/\">\r        <collection>\r            <xsl:apply-templates />\r        </collection>\r    </xsl:template>\r\r    <xsl:template match=\"oai20:record\">\r      <record>\r        <xsl:choose>\r          <xsl:when test=\"oai20:header[@status='deleted']\">\r             <xsl:apply-templates/>\r          </xsl:when>\r          <xsl:otherwise>  \r            <!-- Store the original MARC record to be used by subsequent style sheets -->\r            <original>\r              <record xmlns=\"http://www.openarchives.org/OAI/2.0/\" \r                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r                    xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd\">\r                <xsl:for-each select=\"@* | node()\">\r                    <xsl:copy-of select=\".\"/>\r                </xsl:for-each>\r              </record>            \r            </original>\r            <xsl:apply-templates/>\r          </xsl:otherwise>\r        </xsl:choose>\r      </record>\r    </xsl:template>\r\r\r    <!-- If this is an OAI-PMH deletion record -->\r    <xsl:template match=\"//oai20:header[@status='deleted']\">\r        <delete>\r            <oaiIdentifier><xsl:value-of select=\"oai20:identifier\"/></oaiIdentifier>\r            <identifierTypeIdHere/>\r            <institutionIdHere/>\r        </delete>\r    </xsl:template>\r\r    <!-- MARC meta data -->\r    <xsl:template match=\"//marc:record\">\r\r        <!-- Information needed for storing source record in union catalog context -->\r        <institutionIdHere/>\r        <localIdentifier><xsl:value-of select=\"marc:controlfield[@tag='001']\" /></localIdentifier>\r\r        <!-- Bibliographic record for FOLIO inventory -->\r        <instance>\r            <source>MARC</source>\r\r            <!-- Instance type ID (resource type) -->\r            <instanceTypeId>\r                <!-- UUIDs for resource types -->\r                <xsl:choose>\r                <xsl:when test=\"substring(marc:leader,7,1)='a'\">6312d172-f0cf-40f6-b27d-9fa8feaf332f</xsl:when> <!-- language material : text -->\r                <xsl:when test=\"substring(marc:leader,7,1)='c'\">497b5090-3da2-486c-b57f-de5bb3c2e26d</xsl:when> <!-- notated music : notated music -->\r                <xsl:when test=\"substring(marc:leader,7,1)='d'\">497b5090-3da2-486c-b57f-de5bb3c2e26d</xsl:when> <!-- manuscript notated music : notated music -> notated music -->\r                <xsl:when test=\"substring(marc:leader,7,1)='e'\">526aa04d-9289-4511-8866-349299592c18</xsl:when> <!-- cartographic material : cartographic image -->\r                <xsl:when test=\"substring(marc:leader,7,1)='f'\">a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:when> <!-- other --> <!-- manuscript cartographic material : ? -->\r                <xsl:when test=\"substring(marc:leader,7,1)='g'\">535e3160-763a-42f9-b0c0-d8ed7df6e2a2</xsl:when> <!-- projected image : still image -->\r                <xsl:when test=\"substring(marc:leader,7,1)='i'\">9bce18bd-45bf-4949-8fa8-63163e4b7d7f</xsl:when> <!-- nonmusical sound recording : sounds -->\r                <xsl:when test=\"substring(marc:leader,7,1)='j'\">3be24c14-3551-4180-9292-26a786649c8b</xsl:when> <!-- musical sound recording : performed music -->\r                <xsl:when test=\"substring(marc:leader,7,1)='k'\">a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:when> <!-- other --> <!-- two-dimensional nonprojectable graphic : ?-->\r                <xsl:when test=\"substring(marc:leader,7,1)='m'\">df5dddff-9c30-4507-8b82-119ff972d4d7</xsl:when> <!-- computer file : computer dataset -->\r                <xsl:when test=\"substring(marc:leader,7,1)='o'\">a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:when> <!-- kit : other -->\r                <xsl:when test=\"substring(marc:leader,7,1)='p'\">a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:when> <!-- mixed material : other -->\r                <xsl:when test=\"substring(marc:leader,7,1)='r'\">c1e95c2b-4efc-48cf-9e71-edb622cf0c22</xsl:when> <!-- three-dimensional artifact or naturally occurring object : three-dimensional form -->\r                <xsl:when test=\"substring(marc:leader,7,1)='t'\">6312d172-f0cf-40f6-b27d-9fa8feaf332f</xsl:when> <!-- manuscript language material : text -->\r                <xsl:otherwise>a2c91e87-6bab-44d6-8adb-1fd02481fc4f</xsl:otherwise>                             <!--  : other -->\r                </xsl:choose>\r            </instanceTypeId>\r\r            <!-- Identifiers -->\r            <xsl:if test=\"marc:datafield[@tag='010' or @tag='020' or @tag='022' or @tag='024' or @tag='028' or @tag='035' or @tag='074']\r                        or marc:controlfield[@tag='001']\">\r                <identifiers>\r                <arr>\r                <xsl:for-each select=\"marc:controlfield[@tag='001']\">\r                    <i>\r                    <value><xsl:value-of select=\".\"/></value>\r                    <!-- A subsequent library specific transformation (style sheet)\r                        must replace this tag with the actual identifierTypeId for\r                        the record identifer type of the given library -->\r                    <identifierTypeIdHere/>\r                    </i>\r                </xsl:for-each>\r                <xsl:for-each select=\"marc:datafield[(@tag='001' or @tag='010' or @tag='020' or @tag='022' or @tag='024' or @tag='028' or @tag='035' or @tag='074') and normalize-space(./marc:subfield[@code='a'])]\">\r                    <i>\r                    <xsl:choose>\r                        <xsl:when test=\"current()[@tag='010'] and marc:subfield[@code='a']\">\r                        <value>\r                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\r                        </value>\r                        <identifierTypeId>c858e4f2-2b6b-4385-842b-60732ee14abb</identifierTypeId> <!-- LCCN -->\r                        </xsl:when>\r                        <xsl:when test=\"current()[@tag='020'] and marc:subfield[@code='a']\">\r                        <value>\r                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\r                        </value>\r                        <identifierTypeId>8261054f-be78-422d-bd51-4ed9f33c3422</identifierTypeId> <!-- ISBN -->\r                        </xsl:when>\r                        <xsl:when test=\"current()[@tag='022'] and marc:subfield[@code='a']\">\r                        <value>\r                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\r                        </value>\r                        <identifierTypeId>913300b2-03ed-469a-8179-c1092c991227</identifierTypeId> <!-- ISSN -->\r                        </xsl:when>\r                        <xsl:when test=\"current()[@tag='024'] and marc:subfield[@code='a']\">\r                        <value>\r                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\r                        </value>\r                        <identifierTypeId>2e8b3b6c-0e7d-4e48-bca2-b0b23b376af5</identifierTypeId> <!-- Other standard identifier -->\r                        </xsl:when>\r                        <xsl:when test=\"current()[@tag='028'] and marc:subfield[@code='a']\">\r                        <value>\r                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\r                        </value>\r                        <identifierTypeId>b5d8cdc4-9441-487c-90cf-0c7ec97728eb</identifierTypeId> <!-- Publisher number -->\r                        </xsl:when>\r                        <xsl:when test=\"current()[@tag='035'] and marc:subfield[@code='a']\">\r                        <value>\r                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\r                        </value>\r                        <identifierTypeId>7e591197-f335-4afb-bc6d-a6d76ca3bace</identifierTypeId> <!-- System control number -->\r                        </xsl:when>\r                        <xsl:when test=\"current()[@tag='074'] and marc:subfield[@code='a']\">\r                        <value>\r                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\r                        </value>\r                        <identifierTypeId>351ebc1c-3aae-4825-8765-c6d50dbf011f</identifierTypeId> <!-- GPO item number -->\r                        </xsl:when>\r                    </xsl:choose>\r                    </i>\r                </xsl:for-each>\r                </arr>\r                </identifiers>\r            </xsl:if>\r\r            <!-- Classifications -->\r            <xsl:if test=\"marc:datafield[@tag='050' or @tag='060' or @tag='080' or @tag='082' or @tag='086' or @tag='090']\">\r                <classifications>\r                <arr>\r                    <xsl:for-each select=\"marc:datafield[@tag='050' or @tag='060' or @tag='080' or @tag='082' or @tag='086' or @tag='090']\">\r                    <i>\r                        <xsl:choose>\r                        <xsl:when test=\"current()[@tag='050']\">\r                            <classificationNumber>\r                            <xsl:for-each select=\"marc:subfield[@code='a' or @code='b']\">\r                                <xsl:if test=\"position() > 1\">\r                                <xsl:text>; </xsl:text>\r                            </xsl:if>\r                            <xsl:value-of select=\".\"/>\r                            </xsl:for-each>\r                            </classificationNumber>\r                            <classificationTypeId>ce176ace-a53e-4b4d-aa89-725ed7b2edac</classificationTypeId> <!-- LC, Library of Congress -->\r                        </xsl:when>\r                        <xsl:when test=\"current()[@tag='082']\">\r                            <classificationNumber>\r                            <xsl:for-each select=\"marc:subfield[@code='a' or @code='b']\">\r                                <xsl:if test=\"position() > 1\">\r                                <xsl:text>; </xsl:text>\r                            </xsl:if>\r                            <xsl:value-of select=\".\"/>\r                            </xsl:for-each>\r                            </classificationNumber>\r                            <classificationTypeId>42471af9-7d25-4f3a-bf78-60d29dcf463b</classificationTypeId> <!-- Dewey -->\r                        </xsl:when>\r                        <xsl:when test=\"current()[@tag='086']\">\r                            <classificationNumber>\r                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\r                            </classificationNumber>\r                            <classificationTypeId>9075b5f8-7d97-49e1-a431-73fdd468d476</classificationTypeId> <!-- SUDOC -->\r                        </xsl:when>\r                        </xsl:choose>\r                    </i>\r                    </xsl:for-each>\r                </arr>\r                </classifications>\r            </xsl:if>\r\r            <!-- title --> \r            <title>\r                <xsl:variable name=\"dirty-title\">\r                    <xsl:for-each select=\"marc:datafield[@tag='245'][1]/marc:subfield[@code='a' or @code='b' or @code='h' or @code='n' or @code='p']\">\r                        <xsl:value-of select=\".\"/>\r                        <xsl:if test=\"position() != last()\">\r                            <xsl:text> </xsl:text>\r                        </xsl:if>\r                    </xsl:for-each>\r                </xsl:variable>\r                <xsl:call-template name=\"remove-characters-last\">\r                    <xsl:with-param  name=\"input\" select=\"$dirty-title\" />\r                    <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\r                </xsl:call-template>\r            </title>\r\r            <!-- Contributors -->\r            <xsl:if test=\"marc:datafield[@tag='100' or @tag='110' or @tag='111' or @tag='700' or @tag='710' or @tag='711']\">\r                <contributors>\r                <arr>\r                    <xsl:for-each select=\"marc:datafield[@tag='100' or @tag='110' or @tag='111' or @tag='700' or @tag='710' or @tag='711']\">\r                    <i>\r                        <name>\r                        <xsl:for-each select=\"marc:subfield[@code='a' or @code='b' or @code='c' or @code='d' or @code='f' or @code='g' or @code='j' or @code='k' or @code='l' or @code='n' or @code='p' or @code='q' or @code='t' or @code='u']\">\r                        <xsl:if test=\"position() > 1\">\r                            <xsl:text>, </xsl:text>\r                        </xsl:if>\r                        <xsl:call-template name=\"remove-characters-last\">\r                            <xsl:with-param  name=\"input\" select=\".\" />\r                            <xsl:with-param  name=\"characters\">,-.</xsl:with-param>\r                        </xsl:call-template>\r                        </xsl:for-each>\r                        </name>\r                        <xsl:choose>\r                        <xsl:when test=\"@tag='100' or @tag='700'\">\r                            <contributorNameTypeId>2b94c631-fca9-4892-a730-03ee529ffe2a</contributorNameTypeId> <!-- personal name -->\r                            <xsl:if test=\"@tag='100'\">\r                            <primary>true</primary>\r                            </xsl:if>\r                        </xsl:when>\r                        <xsl:when test=\"@tag='110' or @tag='710'\">\r                            <contributorNameTypeId>2e48e713-17f3-4c13-a9f8-23845bb210aa</contributorNameTypeId> <!-- corporate name -->\r                        </xsl:when>\r                        <xsl:when test=\"@tag='111' or @tage='711'\">\r                            <contributorNameTypeId>e8b311a6-3b21-43f2-a269-dd9310cb2d0a</contributorNameTypeId> <!-- meeting name -->\r                        </xsl:when>\r                        <xsl:otherwise>\r                            <contributorNameTypeId>2b94c631-fca9-4892-a730-03ee529ffe2a</contributorNameTypeId> <!-- personal name -->\r                        </xsl:otherwise>\r                        </xsl:choose>\r                        <xsl:if test=\"marc:subfield[@code='e' or @code='4']\">\r                        <contributorTypeId>\r                            <xsl:call-template name=\"map-relator\"/>\r                        </contributorTypeId>\r                        </xsl:if>\r                    </i>\r                    </xsl:for-each>\r                </arr>\r                </contributors>\r            </xsl:if>\r\r            <!-- Editions -->\r            <xsl:if test=\"marc:datafield[@tag='250']\">\r                <editions>\r                <arr>\r                <xsl:for-each select=\"marc:datafield[@tag='250']\">\r                    <i>\r                    <xsl:value-of select=\"marc:subfield[@code='a']\"/>\r                    <xsl:if test=\"marc:subfield[@code='b']\">; <xsl:value-of select=\"marc:subfield[@code='b']\"/></xsl:if>\r                    </i>\r                </xsl:for-each>\r                </arr>\r                </editions>\r            </xsl:if>\r\r            <!-- Publication -->\r            <xsl:choose>\r                <xsl:when test=\"marc:datafield[@tag='260' or @tag='264']\">\r                <publication>\r                    <arr>\r                    <xsl:for-each select=\"marc:datafield[@tag='260' or @tag='264']\">\r                        <i>\r                        <publisher>\r                            <xsl:value-of select=\"marc:subfield[@code='b']\"/>\r                        </publisher>\r                        <place>\r                            <xsl:value-of select=\"marc:subfield[@code='a']\"/>\r                        </place>\r                        <dateOfPublication>\r                            <xsl:value-of select=\"marc:subfield[@code='c']\"/>\r                        </dateOfPublication>\r                        </i>\r                    </xsl:for-each>\r                    </arr>\r                </publication>\r                </xsl:when>\r                <xsl:otherwise>\r                <publication>\r                    <arr>\r                    <i>\r                        <dateOfPublication>\r                        <xsl:value-of select=\"substring(marc:controlfield[@tag='008'],8,4)\"/>\r                        </dateOfPublication>\r                    </i>\r                    </arr>\r                </publication>\r                </xsl:otherwise>\r            </xsl:choose>\r\r            <!-- physicalDescriptions -->\r            <xsl:if test=\"marc:datafield[@tag='300']\">\r                <physicalDescriptions>\r                <arr>\r                    <xsl:for-each select=\"marc:datafield[@tag='300']\">\r                    <i>\r                        <xsl:call-template name=\"remove-characters-last\">\r                        <xsl:with-param  name=\"input\" select=\"marc:subfield[@code='a']\" />\r                        <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\r                        </xsl:call-template>\r                    </i>\r                    </xsl:for-each>\r                </arr>\r                </physicalDescriptions>\r            </xsl:if>\r\r            <!-- Subjects -->\r            <xsl:if test=\"marc:datafield[@tag='600' or @tag='610' or @tag='611' or @tag='630' or @tag='648' or @tag='650' or @tag='651' or @tag='653' or @tag='654' or @tag='655' or @tag='656' or @tag='657' or @tag='658' or @tag='662' or @tag='69X']\">\r                <subjects>\r                <arr>\r                <xsl:for-each select=\"marc:datafield[@tag='600' or @tag='610' or @tag='611' or @tag='630' or @tag='648' or @tag='650' or @tag='651' or @tag='653' or @tag='654' or @tag='655' or @tag='656' or @tag='657' or @tag='658' or @tag='662' or @tag='69X']\">\r                    <i>\r                    <xsl:for-each select=\"marc:subfield[@code='a' or @code='b' or @code='c' or @code='d' or @code='f' or @code='g' or @code='j' or @code='k' or @code='l' or @code='n' or @code='p' or @code='q' or @code='t' or @code='u' or @code='v' or @code='x' or @code='y' or @code='z']\">\r                    <xsl:if test=\"position() > 1\">\r                        <xsl:text>--</xsl:text>\r                    </xsl:if>\r                    <xsl:call-template name=\"remove-characters-last\">\r                        <xsl:with-param  name=\"input\" select=\".\" />\r                        <xsl:with-param  name=\"characters\">,-.</xsl:with-param>\r                        </xsl:call-template>\r                    </xsl:for-each>\r                    </i>\r                </xsl:for-each>\r                </arr>\r                </subjects>\r            </xsl:if>\r\r            <!-- Notes -->\r            <xsl:if test=\"marc:datafield[@tag='500' or @tag='504' or @tag='505' or @tag='520']\">\r                <notes>\r                    <arr>\r                    <xsl:for-each select=\"marc:datafield[@tag='500' or @tag='504' or @tag='505' or @tag='520']\">\r                        <i>\r                            <note>\r                                <xsl:value-of select=\"normalize-space(.)\"/>\r                            </note>\r                            <instanceNoteTypeId>\r                                <xsl:choose>\r                                    <xsl:when test='./@tag=\"504\"'>86b6e817-e1bc-42fb-bab0-70e7547de6c1</xsl:when> <!-- biliography -->\r                                    <xsl:when test='./@tag=\"505\"'>5ba8e385-0e27-462e-a571-ffa1fa34ea54</xsl:when> <!-- contents -->\r                                    <xsl:when test='./@tag=\"520\"'>0e2e11b-450f-45c8-b09b-0f819999966e</xsl:when> <!-- contents -->\r                                    <xsl:otherwise>6a2533a7-4de2-4e64-8466-074c2fa9308c</xsl:otherwise> <!-- general -->\r                            </xsl:choose>\r                            </instanceNoteTypeId>\r                        </i>\r                    </xsl:for-each>\r                    </arr>\r                </notes>\r            </xsl:if>\r            \r        </instance>\r\r        <!-- Additional info for creating match key in FOLIO Inventory match module -->\r        <matchKey>\r            <xsl:for-each select=\"marc:datafield[@tag='245']\">\r            <title>\r                <xsl:call-template name=\"remove-characters-last\">\r                <xsl:with-param  name=\"input\" select=\"marc:subfield[@code='a']\" />\r                <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\r                </xsl:call-template>\r            </title>\r            <remainder-of-title>\r            <xsl:text> : </xsl:text>\r                <xsl:call-template name=\"remove-characters-last\">\r                <xsl:with-param  name=\"input\" select=\"marc:subfield[@code='b']\" />\r                <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\r                </xsl:call-template>\r            </remainder-of-title>\r            <medium>\r                <xsl:call-template name=\"remove-characters-last\">\r                <xsl:with-param  name=\"input\" select=\"marc:subfield[@code='h']\" />\r                <xsl:with-param  name=\"characters\">,-./ :;</xsl:with-param>\r                </xsl:call-template>\r            </medium>\r            <name-of-part-section-of-work>\r                <xsl:value-of select=\"marc:subfield[@code='p']\" />\r            </name-of-part-section-of-work>\r            <number-of-part-section-of-work>\r                <xsl:value-of select=\"marc:subfield[@code='n']\" />\r            </number-of-part-section-of-work>\r            <inclusive-dates>\r                <xsl:value-of select=\"marc:subfield[@code='f']\" />\r            </inclusive-dates>\r            </xsl:for-each>\r        </matchKey>\r    </xsl:template>\r\r    <xsl:template match=\"text()\"/>\r\r    <xsl:template name=\"remove-characters-last\">\r        <xsl:param name=\"input\" />\r        <xsl:param name=\"characters\"/>\r        <xsl:variable name=\"lastcharacter\" select=\"substring($input,string-length($input))\" />\r        <xsl:choose>\r            <xsl:when test=\"$characters and $lastcharacter and contains($characters, $lastcharacter)\">\r            <xsl:call-template name=\"remove-characters-last\">\r                <xsl:with-param  name=\"input\" select=\"substring($input,1, string-length($input)-1)\" />\r                <xsl:with-param  name=\"characters\" select=\"$characters\" />\r            </xsl:call-template>\r            </xsl:when>\r            <xsl:otherwise>\r            <xsl:value-of select=\"$input\"/>\r            </xsl:otherwise>\r        </xsl:choose>\r    </xsl:template>\r\r</xsl:stylesheet>\r",
  "id": "800010",
  "testData": "",
  "testOutput": "",
  "type": "XmlTransformStep"
}
