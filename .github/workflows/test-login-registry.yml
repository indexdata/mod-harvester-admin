name: test-login-registry

# STATUS: testing DEVOPS-946 DEVOPS-1704 "curl" Action

env:
  FOLIO_MD_REGISTRY: 'https://registry.folio-dev.indexdata.com'

on:
  workflow_dispatch:

jobs:
  test-login-registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Login ModuleDescriptor registry
        id: login-md-registry
        # uses: indiesdev/curl@v1.1
        uses: cyberman54/curl@v1.3
        with:
          url: "${{ env.FOLIO_MD_REGISTRY }}/authn/login"
          method: "POST"
          accept: 201
          timeout: 5000
          retries: 3
          headers: |
            {
              "content-type": "application/json",
              "x-okapi-tenant": "${{ secrets.FOLIO_REGISTRY_TENANT }}"
            }
          body: |
            {
              "username": "${{ secrets.FOLIO_REGISTRY_USERNAME }}",
              "password": "${{ secrets.FOLIO_REGISTRY_PASSWORD }}"
            }
      - name: Get the MD registry login token
        run: |
          echo "TOKEN_MD_REGISTRY=${{ fromJSON(steps.login-md-registry.outputs.response).headers['x-okapi-token'] }}" >> $GITHUB_ENV
      - name: Get the list of modules
        id: result-md-registry
        # uses: indiesdev/curl@v1.1
        uses: cyberman54/curl@v1.3
        with:
          url: "${{ env.FOLIO_MD_REGISTRY }}/_/proxy/modules?latest=1"
          method: "GET"
          timeout: 5000
          retries: 3
          headers: |
            {
              "content-type": "application/json",
              "x-okapi-token": "${{ env.TOKEN_MD_REGISTRY }}"
            }
      - name: Investigate the response data
        run: |
          echo "response.status: ${{ fromJSON(steps.result-md-registry.outputs.response).status_code }}"
          echo ${{ toJSON(steps.result-md-registry.outputs.response) }} > response.json
      - name: Show the module IDs
        run: |
          cat response.json
          echo "--------"
          jq -r '.data[].id' response.json
          echo "--------"
          IDs=$(echo ${{ toJSON(steps.result-md-registry.outputs.response) }} | jq -r '.data[].id' )
          echo "IDs: ${IDs}"
