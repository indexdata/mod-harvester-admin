{
  "description": "A harvest job definition",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique, numeric ID for the job definition. Will be assigned if not provided.",
      "pattern": "^[0-9]*$"
    },
    "name": {
      "type": "string",
      "description": "The name assigned to the harvest configuration."
    },
    "description": {
      "type": "string",
      "description": "Free form description of the configuration to support the administration."
    },
    "openAccess": {
      "type": "string",
      "description": "tbd",
      "enum": ["true", "false"]
    },
    "storage": {
      "type": "object",
      "description": "Reference to the storage configuration to use.",
      "anyOf": [
        {
          "properties": {
            "id": {
              "type": "string",
              "description": "Reference to the ID of the storage engine to use."
            }
          },
          "required": ["id"]
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "Used for look-up by name as an alternative to reference by id (id will be used if present)."
            }
          },
          "required": ["name"]
        }
      ]
    },
    "transformation": {
      "type": "object",
      "description": "Reference to the transformation pipeline to use.",
      "anyOf": [
        {
          "properties": {
            "id": {
              "type": "string",
              "description": "Reference to the ID of the transformation pipeline to apply.",
              "pattern": "^[0-9]*$"
            }
          },
          "required": ["id"]
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "Used for look-up by name as an alternative to reference by ID (id will be used if present)."
            }
          },
          "required": ["name"]
        }
      ]
    },
    "enabled": {
      "type": "string",
      "enum": ["true", "false"],
      "description": "Indicates if the job is scheduled for running"
    },
    "harvestImmediately": {
      "type": "string",
      "enum": ["true", "false"],
      "description": "Whether to harvest when the config is persisted."
    },
    "scheduleString": {
      "type": "string",
      "description": "Crontab style schedule string (simplified): minute(0-59) hour(0-24)  day of month(* or 1-31)  month (* or 1-12)  day of week (* or 0-6)."
    },
    "dateFormat": {
      "type": "string",
      "description": "For example yyyy-MM-dd'T'hh:mm:ss'Z'."
    },
    "url": {
      "type": "string",
      "description": "The URL to access the data from."
    },
    "timeout": {
      "type": "string",
      "description": "Connection/read timeout in seconds; application depending on the specific protocol used for fetching data.",
      "pattern": "^[0-9]*$",
      "default": "300"
    },
    "cacheEnabled": {
      "type": "string",
      "enum": ["true", "false"],
      "description": "Whether or not to store incoming records in Harvester's file system."
    },
    "diskRun": {
      "type": "string",
      "enum": ["true", "false"],
      "description": "Whether or not to run harvest job from records cached in a previous job run."
    },
    "storageBatchLimit": {
      "type": "string",
      "description": "Batch size: Number of records to send to storage at a time.",
      "pattern": "^[0-9]*$"
    },
    "recordLimit": {
      "type": "string",
      "description": "Maximum number of records to harvest.",
      "pattern": "^[0-9]*$"
    },
    "laxParsing": {
      "type": "string",
      "description": "When enabled, Harvester will attempt to parse malformed XML (missing closing tags, entities)",
      "enum": ["true", "false"],
      "default": "false"
    },
    "constantFields": {
      "type": "string",
      "description": "Values related to target handling in MasterKey. Otherwise obsolete."
    },
    "storeOriginal": {
      "type": "string",
      "description": "Indicates whether to store incoming original record, if supported by the job type and the storage configuration.",
      "enum": ["true", "false"],
      "default": "false"
    },
    "currentStatus": {
      "type": "string",
      "enum": [
        "NEW",
        "OK",
        "WARN",
        "ERROR",
        "RUNNING",
        "FINISHED",
        "KILLED"
      ],
      "readOnly": true,
      "description": "Indicates the state of the job. Assigned by API."
    },
    "managedBy": {
      "type": "string",
      "description": "Free-text field for tagging a job with the producer or manager of the resource. Multiple tags may be separated by commas. The tags can be used for filtering status reports by job administrators for example."
    },
    "usedBy": {
      "type": "string",
      "description": "Free form administrative information; could be tags for the clients using this harvestable."
    },
    "serviceProvider": {
      "type": "string",
      "description": "Free-text field for administrative information about the harvest job."
    },
    "contactNotes": {
      "type": "string",
      "description": "Free form text field for administrator's notes."
    },
    "technicalNotes": {
      "type": "string",
      "description": "Free-text field for administrative information."
    },
    "logLevel": {
      "type": "string",
      "description": "Specifies the logging level for the job with TRACE being the most (extremely) verbose. INFO is the recommended log level in most cases.",
      "enum": ["ERROR","WARN","INFO","DEBUG","TRACE"]
    },
    "failedRecordsLogging": {
      "type": "string",
      "description": "Specify whether or not failed records should be saved as XML files in a designated log directory. Also specifies retention policy for the directory, that is, whether to retain files that were saved in previous runs (CLEAN_DIRECTORY = don't retain) and, if so, whether to overwrite any existing files if the same record fails again (CREATE_OVERWRITE) or rather add a sequence number to the new file name in order not to overwrite (ADD_ALL).",
      "enum": ["NO_STORE", "CLEAN_DIRECTORY", "CREATE_OVERWRITE", "ADD_ALL"],
      "default": "CLEAN_DIRECTORY"
    },
    "maxSavedFailedRecordsPerRun": {
      "type": "string",
      "description": "Sets a maximum number of files to save in the failed records directory per run. The job log will tell when the limit is reached.",
      "pattern": "^[0-9]*$",
      "default": "100"
    },
    "maxSavedFailedRecordsTotal": {
      "type": "string",
      "description": "Sets a maximum number of files to be saved in the failed records directory at any given time - as the sum of previously saved records (that were not cleaned up before this run) plus any new records added during the run.The job log will tell when the limit is reached.",
      "pattern": "^[0-9]*$",
      "default": "1000"
    },
    "mailAddress": {
      "type": "string",
      "description": "Comma separated list of e-mail addresses that should receive notification on job completion."
    },
    "mailLevel": {
      "type": "string",
      "description": "The minimum severity of a job's completion status that will trigger email notification.",
      "enum": ["OK","WARN","ERROR"]
    },
    "lastHarvestFinished": {
      "type": "string",
      "description": "Assigned by API. The date and time when the most recent harvest job with this configuration completed."
    },
    "initiallyHarvested": {
      "type": "string",
      "description": "Date and time, assigned by Harvester"
    },
    "lastHarvestStarted": {
      "type": "string",
      "description": "Assigned by Harvester. The date and time when the most recent harvest job with this configuration began."
    },
    "lastUpdated": {
      "type": "string",
      "description": "Assigned by Harvester. The date and time when this definition was last modified."
    },
    "nextHarvestSchedule": {
      "type": "string",
      "description": "The date and time when a job with this definition should be run (if job is enabled)."
    },
    "amountHarvested": {
      "type": "string",
      "description": "Assigned by API. Number of records harvested in last run. It seems this should really be an integer, but string is what the WSAPI gives us.",
      "pattern": "^[0-9]*$"
    },
    "message": {
      "type": "string",
      "description": "Assigned by API. Message summarising results of last run."
    },
    "acl": {
      "type": "string",
      "description": "Assigned by API. Name of the tenant that created the configuration record.",
      "readOnly": true
    },
    "type": {
      "type": "string",
      "enum": ["oaiPmh"],
      "description": "Indicates OAI-PMH job."
    },
    "metadataPrefix": {
      "type": "string",
      "description": "OAI-PMH only. The metadata prefix supported by the OAI-PMH service to harvest from."
    },
    "oaiSetName": {
      "type": "string",
      "description": "OAI-PMH only. The name of a record set offered by the OAI-PMH service to harvest from."
    },
    "resumptionToken": {
      "type": "string",
      "description": "OAI-PMH only. PMH identifier for fetching the next batch of records."
    },
    "clearRtOnError": {
      "type": "string",
      "description": "Clear the resumption token for harvests that complete in an error state. This is useful when server errors out and the last resumption token is no longer valid.",
      "enum": ["true", "false"],
      "default": "false"
    },
    "fromDate": {
      "type": "string",
      "description": "yyyy-MM-dd. If empty and no resumption token is set, the Harvester will harvest the full data set from the resource. When this field contains a value, upon completion of the job the Harvester will reset the value of this field to the day prior to the current run date, so subsequent runs will harvest only new records."
    },
    "untilDate": {
      "type": "string",
      "description": "yyyy-MM-dd. Upper date limit for selective harvesting. On consecutive runs the Harvester will clear this field making the date interval open-ended."
    },
    "retryCount": {
      "type": "string",
      "description": "Indicates how many times Harvester should retry a failed OAI-PMH request.",
      "pattern": "^[0-9]*$",
      "default": "2"
    },
    "retryWait": {
      "type": "string",
      "description": "Indicates how many seconds Harvester should wait before retrying a failed OAI-PMH request.",
      "pattern": "^[0-9]*$",
      "default": "60"
    },
    "allowErrors": {
      "type": "string",
      "description": "NA for OAI-PMH",
      "default": "false",
      "enum": ["true", "false"]
    },
    "json": {
      "type": "object",
      "description": "Custom configurations in JSON format (has no current applications)."
    },
    "overwrite": {
      "type": "string",
      "description": "Applies to Solr but not FOLIO Inventory. Will delete all previously harvested data before beginning the next scheduled (or manually triggered) run, if set to true.",
      "enum": ["true", "false"]
    },
    "keepPartial": {
      "type": "string",
      "description": "Applies to Solr but not FOLIO Inventory. When true, partial records harvested during a failed harvest run will be retained in Solr.",
      "enum": ["true", "false"]
    }
  },
  "required": ["name", "type", "enabled", "harvestImmediately", "storage", "transformation", "url", "metadataPrefix", "oaiSetName"],
  "additionalProperties": false
}

